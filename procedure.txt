- at first create a django project and related apps!!! as working with app is easy !!

- link up apps in settings.py. 

- add different urls for different apps. 

- creating model relationships 

- (CharField add krle max_length must dte hbe)

- autor jdi tr profile delete kre thle post thakbe ki na ? 

[hte pre - 1. all blog dlt hye jbe.(on_delete=models.CASCADE) 2. thakbe]

- ekjn autor ar shdo ektai prfle thke prbe. (one to one)

- model create kre ta admin panel k janite hbe !! (admin.py a register krte hbe)

- each class db te table toire kre. 

- make migrations and migrates

- before make migration and migrate , project should work fine.

- create superuser for django admin

"    def __str__(self):
        return self.name " 
    
- add this in model so that table named it 

- #working with basic html and forms 

- tamplate -> base.html -> 

- global template k settings.py a jainte hbe . 

-  #working with base html and forms . 

- html block container and inherit base form form outer templates

- create form for add_author.html...

- add crspy form  for make better design !! 

- # Author and Profile Form

- magic of one to one field !! ( Profile_with_this_author_already_exists_)

- #Creating Category and Post


def add_category(request):
    if request.method=='POST': # user post request koreche
        profile_form=forms.CategoryForm(request.POST) # user er post request data ekhane capture krlm.
        if profile_form.is_valid(): #post kra dt valid kina check .!
            profile_form.save() # jdi valid hy. database a save krbo
            return redirect('add_category') 
    else: # user normally website a gle blank form pbe !!! 
        profile_form=forms.CategoryForm()
    return render(request, 'add_category.html',{'form':profile_form})


- #Showing post to frontend

- add url name in base.html for routing perpose 

- many to many relation thakle loop dea access jra jabe na , like category. 

- in views.js -> .all() , but in html loop, -> without all can access ! 

- #Edit Post

- priamry key use kre !! 

- all post theke , ami jai pst edit krte cy sta filter krre ante hbe.

- instance within request !!

- #Delete Post

def delete_post(request,id):
    post = models.Post.objects.get(pk=id)
    post.delete()
    return redirect('homepage') 


that's it . 

[10-March-24]

-

- [13-march-24]

- Djano blog part 2 [Module 18 : Simple blog project part 2]

- [15-march-24 continue from login_paget_part1]

- se jdi login na thake tokhoni kbl login krte prbe.

- if after making some changes , migrate not working, remove sqlite and again repeat migration,migrate and create super use , it may work .

- [https://studygyaan.com/django/how-to-restrict-access-with-django-login-required-decorator-function]

- follow above link to make the page login required !

- 

- 